name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write   # Required for GitHub Pages deployment

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2, 3, 4]   # 4 shards
      fail-fast: false         # All shards run independently

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests (shard ${{ matrix.shard }})
        continue-on-error: true
        env:
          PLAYWRIGHT_BLOB_OUTPUT_DIR: results/shard-${{ matrix.shard }}
        run: |
          # ensure per-shard output folder so blob reports don't overwrite each other
          mkdir -p results/shard-${{ matrix.shard }}
          # Run tests with blob reporter for merge-reports compatibility
          # The blob reporter will include screenshots and traces
          npx playwright test --shard=${{ matrix.shard }}/4 --reporter=blob

      - name: Upload shard report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: shard-${{ matrix.shard }}
          path: results/shard-${{ matrix.shard }}

  merge-reports:
    runs-on: ubuntu-latest
    needs: test
    if: always()   # Always run merge job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci  # Only installs Playwright package; no browsers needed

      - name: Download all shard reports
        uses: actions/download-artifact@v4
        with:
          path: ./results

      - name: Verify shard results
        run: ls -R ./results || echo "‚ö†Ô∏è No shard results found"

      - name: Merge reports
        run: |
          mkdir -p merged-results
          # Copy all blob report zip files from shard results into merged-results
          find ./results -type f -name "*.zip" -exec cp {} ./merged-results/ \; || echo "‚ö†Ô∏è No shard blob files found"

          if ls merged-results/*.zip 1> /dev/null 2>&1; then
            echo "Found blob files to merge:"
            ls -la merged-results || true

            # Try merge-reports with blob files. No --output needed, creates playwright-report by default.
            if npx playwright merge-reports merged-results --reporter=html 2>/dev/null; then
              if [ -d playwright-report ]; then
                echo "‚úÖ Merged HTML report created at playwright-report/"
              else
                echo "‚ÑπÔ∏è merge-reports ran but no playwright-report directory was created"
                ls -la . | grep playwright || true
              fi
            else
              echo "‚ÑπÔ∏è 'merge-reports' failed, trying fallback approaches"
              ls -la merged-results || true
            fi
          else
            echo "‚ö†Ô∏è No blob files found in ./results ‚Äî skipping merge"
          fi

      - name: Upload merged report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/

      - name: Verify report content
        if: always()
        run: |
          if [ -d playwright-report ]; then
            echo "‚úÖ Report directory exists"
            ls -la playwright-report/
            if [ -f playwright-report/index.html ]; then
              echo "‚úÖ index.html found, size: $(wc -c < playwright-report/index.html) bytes"
            else
              echo "‚ùå index.html not found"
            fi
          else
            echo "‚ùå playwright-report directory not found"
          fi

      - name: Deploy report to GitHub Pages
        if: always() && hashFiles('playwright-report/index.html') != ''
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: playwright-report

      - name: Add summary with report link
        if: always()
        run: |
          echo "## ‚úÖ Playwright Test Report" >> $GITHUB_STEP_SUMMARY
          if [ -f playwright-report/index.html ]; then
            echo "üìä [View Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/)" >> $GITHUB_STEP_SUMMARY
            echo "‚¨áÔ∏è [Download Report Artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Note:** GitHub Pages may take 1-2 minutes to update after deployment." >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå Report generation failed - no index.html found" >> $GITHUB_STEP_SUMMARY
            echo "‚¨áÔ∏è [Download Debug Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts)" >> $GITHUB_STEP_SUMMARY
          fi
